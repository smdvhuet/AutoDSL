/*
 * generated by Xtext 2.9.1
 */
package info.scce.testdsl.validation

import org.eclipse.xtext.validation.Check
import info.scce.testdsl.testDSL.Test
import info.scce.testdsl.testDSL.TestDSLPackage
import info.scce.testdsl.testDSL.TestInvariants
import info.scce.testdsl.testDSL.TestConditions
import info.scce.testdsl.testDSL.TestOptions
import info.scce.testdsl.testDSL.OptionDelay
import info.scce.testdsl.testDSL.OptionRunFrequency
import info.scce.testdsl.testDSL.OptionTimesToRun

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class TestDSLValidator extends AbstractTestDSLValidator {
	
	@Check
	def checkTestFeatures(Test test) {
		var sawInvariants = false;
		var sawConditions = false;
		var sawOptions = false;
		for (f : test.testFeatures) {
			switch (f) {
				TestInvariants: {
					if (sawInvariants) {
						error('Cannot have multiple Invariants blocks', TestDSLPackage.Literals.TEST__TEST_FEATURES)
						return
					}
					sawInvariants = true;
				}
				
				TestConditions: {
					if (sawConditions) {
						error('Cannot have multiple Conditions blocks', TestDSLPackage.Literals.TEST__TEST_FEATURES)
						return
					}
					sawConditions = true;
				}
				
				TestOptions: {
					if (sawOptions) {
						error('Cannot have multiple Options blocks', TestDSLPackage.Literals.TEST__TEST_FEATURES)
						return
					}
					sawOptions = true;
				}
			}
		}

		if (!sawInvariants || !sawConditions) {
			error('Test requires Invariants and Conditions blocks', TestDSLPackage.Literals.TEST__TEST_FEATURES)
		}
	}
	
	@Check
	def checkOptionsFeatures(TestOptions opts) {
		var sawDelay = false;
		var sawRunFreq = false;
		var sawTimes = false;
		for (o : opts.options) {
			switch (o) {
				OptionDelay: {
					if (sawDelay) {
						error('Cannot have multiple Delays', TestDSLPackage.Literals.TEST_OPTIONS__OPTIONS)
						return
					}
					sawDelay = true;
				}
				
				OptionRunFrequency: {
					if (sawRunFreq) {
						error('Cannot have multiple RunFrequencys', TestDSLPackage.Literals.TEST_OPTIONS__OPTIONS)
						return
					}
					sawRunFreq = true;
				}
				
				OptionTimesToRun: {
					if (sawTimes) {
						error('Cannot have multiple TimeToRuns', TestDSLPackage.Literals.TEST_OPTIONS__OPTIONS)
						return
					}
					sawTimes = true;
				}
			}
		}
	}
}
